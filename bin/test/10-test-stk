#!/usr/bin/env bash

set -e

. $(PWD)/bin/init

p() { printf "%-7s %-20s\n" "$1" "$2"; }

# STAKINGTOKEN=$(seth call $STAKINGREWARDSFACTORY "stakingTokens(uint256)(address)" 1)
# echo $STAKINGTOKEN
# STAKING_LP_GOLD_RING=$(seth call $STAKINGREWARDSFACTORY "stakingRewardsInfoByStakingToken(address)(address)" $STAKINGTOKEN)

# verify
# (cd "lib/staker" && dapp --use solc:0.5.16 verify-contract src/StakingRewards.sol:StakingRewards $STAKING_LP_GOLD_RING $STAKINGREWARDSFACTORY $TOKEN_ERC20_RING $STAKINGTOKEN)

# set duration
# seth send $STAKINGREWARDSFACTORY "setRewardsDuration(uint256)" $((90*86400))

# sleep 1s

# recover
# seth send $TOKEN_ERC20_SOIL "transfer(address,uint256)" $STAKING_LP_GOLD_RING $(seth --to-wei 0.01 ether)
# seth send $STAKINGREWARDSFACTORY "recoverERC20(address)" $TOKEN_ERC20_SOIL

# seth send $TOKEN_ERC20_RING "transfer(address,uint256)" $STAKINGREWARDSFACTORY $(seth --to-wei 0.01 ether)

# print staking reward contracts
# for i in {0..5}; do
#   st=$(seth call $STAKINGREWARDSFACTORY "stakingTokens(uint256)(address)" $i)
#   p "staking" "$st"
#   rw=$(seth call $STAKINGREWARDSFACTORY "stakingRewardsInfoByStakingToken(address)(address)" $st)
#   p "reward" "$rw"

#   (cd "lib/staker" && dapp --use solc:0.5.16 verify-contract-subscan src/StakingRewards.sol:StakingRewards $rw)
#   # stake
#   # seth send $st "approve(address,uint256)" $rw $(seth --to-int256 -1)
#   # sleep 3s
#   # amount=$(seth --to-uint256 $(seth --to-wei 0.00001 ether))
#   # seth send $rw "stake(uint256)" $amount
#   # sleep 3s
# done

# notify
rewardAmount=$(seth --to-uint256 $(seth --to-wei 648000 ether))
# rewardAmount=$(seth --to-uint256 $(seth --to-wei 100000 gwei))
# seth send $TOKEN_ERC20_RING "transfer(address,uint256)" $STAKINGREWARDSFACTORY $rewardAmount
seth send $STAKINGREWARDSFACTORY "notifyRewardAmounts(uint256)" $rewardAmount

# external notify
# externalReward=$(seth --to-uint256 $(seth --to-wei 100000 ether))
# seth send $TOKEN_ERC20_RING "transfer(address,uint256)" $STAKINGREWARDSFACTORY $externalReward
# sleep 1s
# seth send $STAKINGREWARDSFACTORY "notifyRewardAmount(address,uint256)" $STAKINGTOKEN $externalReward
# sleep 1s


# for i in {0..5}; do
#   st=$(seth call $STAKINGREWARDSFACTORY "stakingTokens(uint256)(address)" $i)
#   p "staking" "$st"
#   rw=$(seth call $STAKINGREWARDSFACTORY "stakingRewardsInfoByStakingToken(address)(address)" $st)
#   p "reward" "$rw"
#   # exit
#   seth send $rw "exit()"
#   sleep 3s
# done
